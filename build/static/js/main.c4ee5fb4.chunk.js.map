{"version":3,"sources":["components/common/muve/Muve.jsx","components/pages/signIn/SignIn.jsx","components/pages/signUp/SignUp.jsx","App.js","serviceWorker.js","index.js"],"names":["Muve","id","className","Component","SignIn","style","backgroundImage","type","placeholder","to","SignUp","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oSAGqBA,E,iLAEb,OACI,0BAAMC,GAAG,OAAOC,UAAU,oBACtB,0BAAMA,UAAU,gBAAhB,MACA,0BAAMA,UAAU,kBAAhB,W,GALkBC,a,QCIbC,E,iLAKb,OACI,yBAAKF,UAAU,cAAcG,MAJjB,CACZC,gBAAiB,oCAIb,yBAAKJ,UAAU,OACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,yCACX,iDACA,6BAFJ,kCAII,6BACA,6BALJ,QAMS,mDANT,yEAWJ,yBAAKA,UAAU,kBAAf,MAGA,yBAAKA,UAAU,uDAEX,gCAAK,kBAAC,EAAD,OACL,6BAEA,wBAAIA,UAAU,mCAAd,WACA,6BACA,0BAAMA,UAAU,aACZ,yBAAKA,UAAU,aACX,2BAAOA,UAAU,cAAjB,SACA,2BAAOK,KAAK,QAAQL,UAAU,eAAeM,YAAY,sBAE7D,6BACA,yBAAKN,UAAU,aACX,2BAAOA,UAAU,cAAjB,YACA,2BAAOK,KAAK,WAAWL,UAAU,eAAeM,YAAY,yBAEhE,6BACA,uBAAGN,UAAU,gBAAb,yBACA,6BACA,6BACA,4BAAQA,UAAU,6BAAlB,YACA,6BACA,6BACA,kBAAC,IAAD,CAAMO,GAAG,YAAW,0BAAMP,UAAU,uBAAhB,0BAA6D,0BAAMA,UAAU,gBAAhB,qB,GA/CzEC,aCFfO,E,iLAKb,OAEI,yBAAKR,UAAU,cAAcG,MALjB,CACZC,gBAAiB,uCAKb,yBAAKJ,UAAU,OACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,yCACX,sDACA,6BAFJ,mDAII,6BACA,6BACA,yDANJ,kDAMoF,4CANpF,MAWJ,yBAAKA,UAAU,kBAAf,MAGA,yBAAKA,UAAU,uDAEX,gCAAK,kBAAC,EAAD,OACL,6BAEA,wBAAIA,UAAU,mCAAd,uBACA,6BACA,0BAAMA,UAAU,aACZ,yBAAKA,UAAU,aACX,2BAAOA,UAAU,cAAjB,aACA,2BAAQA,UAAU,eAAeM,YAAY,0BAEjD,6BACA,yBAAKN,UAAU,aACX,2BAAOA,UAAU,cAAjB,SACA,2BAAOK,KAAK,QAAQL,UAAU,eAAeM,YAAY,sBAE7D,6BACA,yBAAKN,UAAU,aACX,2BAAOA,UAAU,cAAjB,YACA,2BAAOK,KAAK,WAAWL,UAAU,eAAeM,YAAY,yBAEhE,6BACA,yBAAKN,UAAU,aACX,2BAAOA,UAAU,cAAjB,oBACA,2BAAOK,KAAK,WAAWL,UAAU,eAAeM,YAAY,2BAEhE,6BACA,uBAAGN,UAAU,gBAAb,yBACA,6BACA,6BACA,4BAAQA,UAAU,6BAAlB,YACA,6BACA,6BACA,kBAAC,IAAD,CAAMO,GAAG,YAAW,0BAAMP,UAAU,uBAAhB,4BAA+D,0BAAMA,UAAU,gBAAhB,qB,GA1D3EC,a,OCgBrBQ,MAbf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAIJ,GAAG,aAD9B,KAEE,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,WAAWC,UAAWV,IAF1C,IAGE,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,WAAWC,UAAWJ,IAH1C,OCCcK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c4ee5fb4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nexport default class Muve extends Component {\r\n    render() {\r\n        return (\r\n            <span id=\"muve\" className=\"font-weight-bold\">\r\n                <span className=\"text-primary\">mu</span>\r\n                <span className=\"text-secondary\">ve</span>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Muve from \"../../common/muve/Muve\"\r\n\r\nimport {Link } from 'react-router-dom';\r\n\r\n\r\nexport default class SignIn extends Component {\r\n    render() {\r\n        const myStyle = {\r\n            backgroundImage: 'url(\"/assets/images/login.svg\")'\r\n        }\r\n        return (\r\n            <div className=\"router-body\" style={myStyle}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5 col-lg-5 text-center\">\r\n                        <div className=\"text-sign-in d-inline-block text-left\">\r\n                            <h1>Your Flexy Wallet</h1>\r\n                            <br></br>\r\n                            On the road and short of cash ?\r\n                            <br></br>\r\n                            <br></br>\r\n                            Your <b>Muve flexible Wallet</b> got you covered, just login from your phone and make that cash call\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-1 col-lg-3\">\r\nee\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-4 p-5 sign-in-container text-center\">\r\n          \r\n                        <h3> <Muve /></h3>\r\n                        <br />\r\n                   \r\n                        <h2 className=\"text-secondary font-weight-bold\">Sign In</h2>\r\n                        <br />\r\n                        <form className=\"text-left\">\r\n                            <div className=\"eachInput\">\r\n                                <label className=\"text-muted\">Email</label>\r\n                                <input type=\"email\" className=\"form-control\" placeholder=\"Enter your email\" />\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"eachInput\">\r\n                                <label className=\"text-muted\">Password</label>\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Enter your Password\" />\r\n                            </div>\r\n                            <br></br>\r\n                            <a className=\"text-primary\">Forgot your password?</a>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <button className=\"btn btn-block btn-primary\">Continue</button>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <Link to=\"/sign-up\"><span className=\"d-block text-center\">Don't have an account? <span className=\"text-primary\" >Sign Up</span></span></Link>\r\n          \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Muve from \"../../common/muve/Muve\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class SignUp extends Component {\r\n    render() {\r\n        const myStyle = {\r\n            backgroundImage: 'url(\"/assets/images/register.svg\")'\r\n        }\r\n        return (\r\n   \r\n            <div className=\"router-body\" style={myStyle}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5 col-lg-5 text-center\">\r\n                        <div className=\"text-sign-in d-inline-block text-left\">\r\n                            <h1>Cash calls on steroids</h1>\r\n                            <br></br>\r\n                            Can't stand hetic queues due to an appointment ?\r\n                            <br></br>\r\n                            <br></br>\r\n                            <b>Muve's swift cash delivery</b> ensures your cash gets to you before you say \"<b>Jack-Robinson</b>\"\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-1 col-lg-3\">\r\nee\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-4 p-5 sign-in-container text-center\">\r\n          \r\n                        <h3> <Muve /></h3>\r\n                        <br />\r\n                   \r\n                        <h2 className=\"text-secondary font-weight-bold\">Create your account</h2>\r\n                        <br />\r\n                        <form className=\"text-left\">\r\n                            <div className=\"eachInput\">\r\n                                <label className=\"text-muted\">Full name</label>\r\n                                <input  className=\"form-control\" placeholder=\"Enter your full name\" />\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"eachInput\">\r\n                                <label className=\"text-muted\">Email</label>\r\n                                <input type=\"email\" className=\"form-control\" placeholder=\"Enter your email\" />\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"eachInput\">\r\n                                <label className=\"text-muted\">Password</label>\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Enter your Password\" />\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"eachInput\">\r\n                                <label className=\"text-muted\">Confirm Password</label>\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Confirm your Password\" />\r\n                            </div>\r\n                            <br></br>\r\n                            <a className=\"text-primary\">Forgot your password?</a>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <button className=\"btn btn-block btn-primary\">Continue</button>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <Link to=\"/sign-in\"><span className=\"d-block text-center\">Already have an account? <span className=\"text-primary\" >Sign In</span></span></Link>\r\n          \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\n\nimport './App.css';\nimport SignIn from './components/pages/signIn/SignIn'\nimport SignUp from './components/pages/signUp/SignUp'\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Redirect exact path=\"/\" to=\"/sign-in\" />);\n        <Route exact path=\"/sign-in\" component={SignIn} />;\n        <Route exact path=\"/sign-up\" component={SignUp} />;\n        </Switch>\n        </Router>\n\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}